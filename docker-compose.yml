version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: drmp-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: drmp
      MYSQL_USER: drmp
      MYSQL_PASSWORD: drmp123456
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - drmp-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: drmp-redis
    restart: unless-stopped
    command: redis-server --requirepass redis123456
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - drmp-network

  # Backend Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: drmp-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/drmp?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
      SPRING_DATASOURCE_USERNAME: drmp
      SPRING_DATASOURCE_PASSWORD: drmp123456
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PASSWORD: redis123456
    depends_on:
      - mysql
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - drmp-network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: drmp-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - drmp-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: drmp-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - drmp-network

volumes:
  mysql_data:
  redis_data:

networks:
  drmp-network:
    driver: bridge